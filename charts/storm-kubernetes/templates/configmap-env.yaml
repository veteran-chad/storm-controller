apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-env
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
data:
  # Common environment variables for all Storm components
  STORM_CONF_DIR: "/conf"
  STORM_LOG_DIR: {{ .Values.nimbus.logDir | default .Values.supervisor.logDir | default .Values.ui.logDir | default "/logs" | quote }}
  STORM_DATA_DIR: {{ .Values.supervisor.dataDir | default "/data" | quote }}
  # LOG_FORMAT is now set per-component via extraEnvVars
  
  # Zookeeper configuration
  {{- if not .Values.zookeeper.enabled }}
  STORM_STORM__ZOOKEEPER__SERVERS: {{ .Values.zookeeper.external.servers | join "," | quote }}
  {{- else }}
  STORM_STORM__ZOOKEEPER__SERVERS: "{{ include "storm.zookeeperHeadlessService" . }}"
  {{- end }}
  
  # Nimbus seeds configuration
  STORM_NIMBUS__SEEDS: {{ include "storm.nimbusSeed" . | quote }}
  
  # Cluster-wide Storm configuration as environment variables
  {{- if .Values.cluster.extraConfig }}
  {{- range $key, $value := .Values.cluster.extraConfig }}
  {{- $envKey := $key | upper | replace "." "__" }}
  STORM_{{ $envKey }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  
  # Component-specific configurations
  {{- if .Values.nimbus.extraConfig }}
  # Nimbus configuration
  {{- range $key, $value := .Values.nimbus.extraConfig }}
  {{- $envKey := $key | upper | replace "." "__" }}
  STORM_{{ $envKey }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  
  {{- if .Values.ui.extraConfig }}
  # UI configuration
  {{- range $key, $value := .Values.ui.extraConfig }}
  {{- $envKey := $key | upper | replace "." "__" }}
  STORM_{{ $envKey }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  
  {{- if .Values.supervisor.extraConfig }}
  # Supervisor configuration
  {{- range $key, $value := .Values.supervisor.extraConfig }}
  {{- $envKey := $key | upper | replace "." "__" }}
  STORM_{{ $envKey }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  
  # Port configurations
  {{- if .Values.nimbus.ports.thrift }}
  STORM_NIMBUS__THRIFT__PORT: {{ .Values.nimbus.ports.thrift | quote }}
  {{- end }}
  {{- if .Values.ui.ports.http }}
  STORM_UI__PORT: {{ .Values.ui.ports.http | quote }}
  {{- end }}
  
  # Supervisor slots configuration
  {{- if .Values.supervisor.slotsPerSupervisor }}
  STORM_SUPERVISOR__SLOTS__PORTS: "{{ range $i := until (int .Values.supervisor.slotsPerSupervisor) }}{{ if $i }},{{ end }}{{ add 6700 $i }}{{ end }}"
  {{- end }}
  
  # Auto-calculated memory settings for supervisor
  {{- if and .Values.supervisor.enabled (eq .Values.supervisor.memoryConfig.mode "auto") }}
  {{- $memoryPerWorker := .Values.supervisor.memoryConfig.memoryPerWorker | toString -}}
  {{- $slots := .Values.supervisor.slotsPerSupervisor -}}
  {{- $cpuPerWorker := .Values.supervisor.memoryConfig.cpuPerWorker | toString -}}
  {{- $workerMemoryMB := 0 -}}
  {{- if hasSuffix "Gi" $memoryPerWorker -}}
  {{- $workerMemoryMB = trimSuffix "Gi" $memoryPerWorker | float64 | mul 1024 | int -}}
  {{- else if hasSuffix "Mi" $memoryPerWorker -}}
  {{- $workerMemoryMB = trimSuffix "Mi" $memoryPerWorker | int -}}
  {{- end -}}
  {{- $totalWorkerMemoryMB := mul $workerMemoryMB $slots -}}
  {{- $heapMemoryMB := div (mul $workerMemoryMB 75) 100 -}}
  {{- $cpuCores := 1.0 -}}
  {{- if hasSuffix "m" $cpuPerWorker -}}
  {{- $cpuCores = trimSuffix "m" $cpuPerWorker | float64 | div 1000 -}}
  {{- else -}}
  {{- $cpuCores = $cpuPerWorker | float64 -}}
  {{- end -}}
  {{- $totalCpu := mulf $cpuCores (float64 $slots) -}}
  STORM_SUPERVISOR__MEMORY__CAPACITY__MB: {{ $totalWorkerMemoryMB | quote }}
  STORM_SUPERVISOR__CPU__CAPACITY: {{ mulf $totalCpu 100 | printf "%.0f" | quote }}
  STORM_WORKER__HEAP__MEMORY__MB: {{ $heapMemoryMB | quote }}
  {{- end }}
  
  # JMX configuration for metrics collection
  {{- if .Values.metrics.jmx.enabled }}
  # Worker JMX ports configuration
  {{- if .Values.supervisor.slotsPerSupervisor }}
  {{- $workerOffset := .Values.metrics.jmx.ports.workerOffset }}
  STORM_WORKER__CHILDOPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=%ID%-{{ $workerOffset }} -Dcom.sun.management.jmxremote.port=%ID%-{{ $workerOffset }}"
  {{- end }}
  {{- end }}
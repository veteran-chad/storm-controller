{{- if .Values.metrics.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}-metrics-exporter
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: metrics-exporter
    {{- if .Values.metrics.datadog.enabled }}
    tags.datadoghq.com/env: {{ .Values.metrics.environment | quote }}
    tags.datadoghq.com/service: {{ .Values.metrics.serviceName | quote }}
    tags.datadoghq.com/version: {{ .Values.metrics.serviceVersion | quote }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 6 }}
      app.kubernetes.io/component: metrics-exporter
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- include "storm.datadogLogAnnotations" (dict "root" $ "component" "metrics-exporter") | nindent 8 }}
        {{- if .Values.metrics.exporter.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metrics.exporter.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: metrics-exporter
        {{- if .Values.metrics.datadog.enabled }}
        tags.datadoghq.com/env: {{ .Values.metrics.environment | quote }}
        tags.datadoghq.com/service: {{ .Values.metrics.serviceName | quote }}
        tags.datadoghq.com/version: {{ .Values.metrics.serviceVersion | quote }}
        {{- end }}
        {{- if .Values.metrics.exporter.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.metrics.exporter.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "storm.serviceAccountName" . }}
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.metrics.exporter.image) "context" $) | nindent 6 }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.metrics.exporter.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.exporter.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.metrics.exporter.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.exporter.tolerations "context" .) | nindent 8 }}
      {{- end }}
      containers:
        - name: metrics-exporter
          image: {{ include "common.images.image" (dict "imageRoot" .Values.metrics.exporter.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.metrics.exporter.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command:
            - python3
            - /app/storm-metrics-collector.py
          env:
            - name: STORM_UI_URL
              value: "http://{{ include "common.names.fullname" . }}-ui:{{ .Values.ui.ports.http }}"
            - name: METRICS_PORT
              value: "{{ .Values.metrics.exporter.port }}"
            - name: LOG_LEVEL
              value: "{{ .Values.metrics.exporter.logLevel }}"
            {{- if .Values.metrics.otel.enabled }}
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.version={{ .Values.metrics.serviceVersion }},deployment.environment={{ .Values.metrics.environment }}"
            - name: OTEL_SERVICE_NAME
              value: "{{ .Values.metrics.serviceName }}"
            {{- end }}
            {{- if .Values.metrics.datadog.enabled }}
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            {{- end }}
          volumeMounts:
            - name: metrics-script
              mountPath: /app
              readOnly: true
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.exporter.port }}
              protocol: TCP
          {{- if .Values.metrics.exporter.resources }}
          resources: {{- toYaml .Values.metrics.exporter.resources | nindent 12 }}
          {{- else if ne .Values.metrics.exporter.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.metrics.exporter.resourcesPreset) | nindent 12 }}
          {{- end }}
      volumes:
        - name: metrics-script
          configMap:
            name: {{ include "common.names.fullname" . }}-metrics-exporter
            defaultMode: 0755
{{- end }}
# Default values for storm-kubernetes (traditional Helm deployment)

## @section Global parameters
global:
  ## @param global.imageRegistry Global Docker image registry
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  imagePullSecrets: []
  ## @param global.storageClass Global StorageClass for Persistent Volume(s)
  storageClass: ""

## @section Common parameters
## @param nameOverride String to partially override common.names.fullname template
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname template
fullnameOverride: ""
## @param clusterDomain Default Kubernetes cluster domain
clusterDomain: cluster.local
## @param commonAnnotations Annotations to add to all deployed objects
commonAnnotations: {}
## @param commonLabels Labels to add to all deployed objects
commonLabels: {}

## @section External Zookeeper parameters
## @param externalZookeeper.servers List of external Zookeeper servers (required)
externalZookeeper:
  servers: []
  # Example:
  # servers:
  #   - "zk1.example.com:2181"
  #   - "zk2.example.com:2181"
  #   - "zk3.example.com:2181"

## @section Storm configuration parameters
## @param storm.config Storm configuration (storm.yaml content)
storm:
  config:
    storm.zookeeper.session.timeout: 20000
    storm.zookeeper.connection.timeout: 15000
    nimbus.task.timeout.secs: 30
    nimbus.supervisor.timeout.secs: 60
    supervisor.worker.timeout.secs: 30
    topology.message.timeout.secs: 30
    storm.local.dir: "/storm/data"
    storm.log.dir: "/storm/logs"

## @section Storm Image parameters
image:
  ## @param image.registry Storm image registry
  registry: docker.io
  ## @param image.repository Storm image repository
  repository: storm
  ## @param image.tag Storm image tag
  tag: 2.8.1
  ## @param image.digest Storm image digest in the way sha256:aa....
  digest: ""
  ## @param image.pullPolicy Storm image pull policy
  pullPolicy: IfNotPresent
  ## @param image.pullSecrets Specify docker-registry secret names as an array
  pullSecrets: []

## @section Nimbus parameters
nimbus:
  ## @param nimbus.replicaCount Number of Nimbus replicas
  replicaCount: 1
  ## @param nimbus.configuration Additional Storm configuration for Nimbus
  configuration: ""
  ## @param nimbus.existingConfigmap Name of existing ConfigMap with Storm configuration
  existingConfigmap: ""
  ## @param nimbus.extraEnvVars Array with extra environment variables
  extraEnvVars: []
  ## @param nimbus.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  extraEnvVarsCM: ""
  ## @param nimbus.extraEnvVarsSecret Name of existing Secret containing extra env vars
  extraEnvVarsSecret: ""
  
  ## @param nimbus.command Override default container command
  command: []
  ## @param nimbus.args Override default container args
  args: []
  ## @param nimbus.lifecycleHooks Lifecycle hooks for the container
  lifecycleHooks: {}
  ## @param nimbus.extraVolumes Extra volumes
  extraVolumes: []
  ## @param nimbus.extraVolumeMounts Extra volume mounts
  extraVolumeMounts: []
  
  ## Pod Security Context
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  
  ## Container Security Context
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  
  ## @param nimbus.resources.limits Resource limits
  ## @param nimbus.resources.requests Resource requests
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  ## @param nimbus.nodeSelector Node labels for pod assignment
  nodeSelector: {}
  ## @param nimbus.tolerations Tolerations for pod assignment
  tolerations: []
  ## @param nimbus.affinity Affinity for pod assignment
  affinity: {}
  ## @param nimbus.podLabels Extra labels for pods
  podLabels: {}
  ## @param nimbus.podAnnotations Annotations for pods
  podAnnotations: {}
  ## @param nimbus.priorityClassName Priority class name
  priorityClassName: ""
  ## @param nimbus.schedulerName Alternative scheduler
  schedulerName: ""
  ## @param nimbus.terminationGracePeriodSeconds Grace period for pod termination
  terminationGracePeriodSeconds: ""
  
  ## Nimbus service parameters
  service:
    type: ClusterIP
    ports:
      thrift: 6627
    nodePorts:
      thrift: ""
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: Cluster
    annotations: {}
    extraPorts: []
    sessionAffinity: None
    sessionAffinityConfig: {}
  
  ## Persistence
  persistence:
    enabled: false
    storageClass: ""
    annotations: {}
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    existingClaim: ""
    selector: {}
    dataSource: {}
  
  ## Pod Disruption Budget
  pdb:
    create: true
    minAvailable: 1
    maxUnavailable: ""

## @section Supervisor parameters
supervisor:
  ## @param supervisor.replicaCount Number of Supervisor replicas
  replicaCount: 1
  ## @param supervisor.slotsPerSupervisor Number of worker slots per supervisor
  slotsPerSupervisor: 1
  ## @param supervisor.configuration Additional Storm configuration for Supervisor
  configuration: ""
  ## @param supervisor.existingConfigmap Name of existing ConfigMap with Storm configuration
  existingConfigmap: ""
  ## @param supervisor.extraEnvVars Array with extra environment variables
  extraEnvVars: []
  ## @param supervisor.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  extraEnvVarsCM: ""
  ## @param supervisor.extraEnvVarsSecret Name of existing Secret containing extra env vars
  extraEnvVarsSecret: ""
  
  ## @param supervisor.command Override default container command
  command: []
  ## @param supervisor.args Override default container args
  args: []
  ## @param supervisor.lifecycleHooks Lifecycle hooks for the container
  lifecycleHooks: {}
  ## @param supervisor.extraVolumes Extra volumes
  extraVolumes: []
  ## @param supervisor.extraVolumeMounts Extra volume mounts
  extraVolumeMounts: []
  
  ## @param supervisor.deploymentMode Deployment mode - 'deployment' or 'daemonset'
  deploymentMode: deployment
  
  ## Pod Security Context
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  
  ## Container Security Context
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  
  ## @param supervisor.resources.limits Resource limits
  ## @param supervisor.resources.requests Resource requests
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  
  ## @param supervisor.nodeSelector Node labels for pod assignment
  nodeSelector: {}
  ## @param supervisor.tolerations Tolerations for pod assignment
  tolerations: []
  ## @param supervisor.affinity Affinity for pod assignment
  affinity: {}
  ## @param supervisor.podLabels Extra labels for pods
  podLabels: {}
  ## @param supervisor.podAnnotations Annotations for pods
  podAnnotations: {}
  ## @param supervisor.priorityClassName Priority class name
  priorityClassName: ""
  ## @param supervisor.schedulerName Alternative scheduler
  schedulerName: ""
  ## @param supervisor.terminationGracePeriodSeconds Grace period for pod termination
  terminationGracePeriodSeconds: ""
  
  ## Supervisor autoscaling
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPU: 80
    targetMemory: 80
  
  ## Supervisor service parameters
  service:
    type: ClusterIP
    ports:
      http: 8000
    nodePorts:
      http: ""
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: Cluster
    annotations: {}
    extraPorts: []
    sessionAffinity: None
    sessionAffinityConfig: {}

## @section Storm UI parameters
ui:
  ## @param ui.enabled Enable Storm UI
  enabled: true
  ## @param ui.replicaCount Number of Storm UI replicas
  replicaCount: 1
  ## @param ui.configuration Additional Storm configuration for UI
  configuration: ""
  ## @param ui.existingConfigmap Name of existing ConfigMap with Storm configuration
  existingConfigmap: ""
  ## @param ui.extraEnvVars Array with extra environment variables
  extraEnvVars: []
  ## @param ui.extraEnvVarsCM Name of existing ConfigMap containing extra env vars
  extraEnvVarsCM: ""
  ## @param ui.extraEnvVarsSecret Name of existing Secret containing extra env vars
  extraEnvVarsSecret: ""
  
  ## @param ui.command Override default container command
  command: []
  ## @param ui.args Override default container args
  args: []
  ## @param ui.lifecycleHooks Lifecycle hooks for the container
  lifecycleHooks: {}
  ## @param ui.extraVolumes Extra volumes
  extraVolumes: []
  ## @param ui.extraVolumeMounts Extra volume mounts
  extraVolumeMounts: []
  
  ## Pod Security Context
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  
  ## Container Security Context
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  
  ## @param ui.resources.limits Resource limits
  ## @param ui.resources.requests Resource requests
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  
  ## @param ui.nodeSelector Node labels for pod assignment
  nodeSelector: {}
  ## @param ui.tolerations Tolerations for pod assignment
  tolerations: []
  ## @param ui.affinity Affinity for pod assignment
  affinity: {}
  ## @param ui.podLabels Extra labels for pods
  podLabels: {}
  ## @param ui.podAnnotations Annotations for pods
  podAnnotations: {}
  ## @param ui.priorityClassName Priority class name
  priorityClassName: ""
  ## @param ui.schedulerName Alternative scheduler
  schedulerName: ""
  ## @param ui.terminationGracePeriodSeconds Grace period for pod termination
  terminationGracePeriodSeconds: ""
  
  ## UI service parameters
  service:
    type: ClusterIP
    ports:
      http: 8080
    nodePorts:
      http: ""
    clusterIP: ""
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    externalTrafficPolicy: Cluster
    annotations: {}
    extraPorts: []
    sessionAffinity: None
    sessionAffinityConfig: {}
  
  ## UI ingress parameters
  ingress:
    enabled: false
    pathType: ImplementationSpecific
    apiVersion: ""
    ingressClassName: ""
    hostname: storm.local
    path: /
    annotations: {}
    tls: false
    selfSigned: false
    extraHosts: []
    extraPaths: []
    extraTls: []
    secrets: []
    extraRules: []

## @section RBAC parameters
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Auto mount service account token
  automountServiceAccountToken: true
  ## @param serviceAccount.annotations Additional annotations
  annotations: {}

rbac:
  ## @param rbac.create Whether to create RBAC resources
  create: true
  ## @param rbac.rules Custom RBAC rules
  rules: []
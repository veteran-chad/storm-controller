## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters

## @param kubeVersion Force target Kubernetes version (using Helm capabilities if not set)
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""
## @param clusterDomain Default Kubernetes cluster domain
##
clusterDomain: cluster.local
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## @section CRD parameters

## @param crds.install Install Storm CRDs
## @param crds.keep Keep CRDs on chart uninstall
##
crds:
  install: true
  keep: true

## @section Storm Image parameters

## Apache Storm image
## ref: https://hub.docker.com/r/apache/storm
## @param image.registry [default: REGISTRY_NAME] Storm image registry
## @param image.repository [default: REPOSITORY_NAME/storm] Storm image repository
## @param image.tag Storm image tag (immutable tags are recommended)
## @param image.digest Storm image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Storm image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
##
image:
  registry: docker.io
  repository: storm
  tag: 2.8.1
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## @section Nimbus parameters

## @param nimbus.replicaCount Number of Nimbus replicas (HA mode)
## @param nimbus.configuration Storm configuration for Nimbus
## @param nimbus.existingConfigmap Name of existing ConfigMap with Storm configuration for Nimbus
## @param nimbus.extraEnvVars Array with extra environment variables to add to Nimbus containers
## @param nimbus.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Nimbus containers
## @param nimbus.extraEnvVarsSecret Name of existing Secret containing extra env vars for Nimbus containers
##
nimbus:
  replicaCount: 1
  configuration: ""
  existingConfigmap: ""
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  ## @param nimbus.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param nimbus.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param nimbus.lifecycleHooks for the Nimbus container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param nimbus.extraVolumes Optionally specify extra list of additional volumes for the Nimbus pod(s)
  ##
  extraVolumes: []
  ## @param nimbus.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Nimbus container(s)
  ##
  extraVolumeMounts: []
  ## @param nimbus.podSecurityContext.enabled Enabled Nimbus pods' Security Context
  ## @param nimbus.podSecurityContext.fsGroup Set Nimbus pod's Security Context fsGroup
  ## @param nimbus.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param nimbus.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param nimbus.podSecurityContext.supplementalGroups Set filesystem extra groups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  ## @param nimbus.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param nimbus.containerSecurityContext.seLinuxOptions Set SELinux options in container
  ## @param nimbus.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param nimbus.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param nimbus.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param nimbus.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param nimbus.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param nimbus.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param nimbus.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## Configure resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param nimbus.resources.limits The resources limits for the Nimbus containers
  ## @param nimbus.resources.requests The requested resources for the Nimbus containers
  ##
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  ## Configure Nimbus containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param nimbus.livenessProbe.enabled Enable livenessProbe on Nimbus containers
  ## @param nimbus.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param nimbus.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param nimbus.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param nimbus.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param nimbus.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param nimbus.readinessProbe.enabled Enable readinessProbe on Nimbus containers
  ## @param nimbus.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param nimbus.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param nimbus.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param nimbus.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param nimbus.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param nimbus.startupProbe.enabled Enable startupProbe on Nimbus containers
  ## @param nimbus.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param nimbus.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param nimbus.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param nimbus.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param nimbus.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param nimbus.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param nimbus.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param nimbus.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param nimbus.hostAliases Add deployment host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param nimbus.podLabels Extra labels for Nimbus pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param nimbus.podAnnotations Annotations for Nimbus pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param nimbus.podAffinityPreset Pod affinity preset. Ignored if `nimbus.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param nimbus.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `nimbus.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node nimbus.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param nimbus.nodeAffinityPreset.type Node affinity preset type. Ignored if `nimbus.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param nimbus.nodeAffinityPreset.key Node label key to match. Ignored if `nimbus.affinity` is set
    ##
    key: ""
    ## @param nimbus.nodeAffinityPreset.values Node label values to match. Ignored if `nimbus.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param nimbus.affinity Affinity for Nimbus pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `nimbus.podAffinityPreset`, `nimbus.podAntiAffinityPreset`, and `nimbus.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param nimbus.nodeSelector Node labels for Nimbus pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param nimbus.tolerations Tolerations for Nimbus pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param nimbus.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param nimbus.priorityClassName Nimbus pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param nimbus.schedulerName Alternate scheduler for Nimbus pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param nimbus.terminationGracePeriodSeconds In seconds, time given to the Nimbus pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param nimbus.updateStrategy.type Nimbus deployment strategy type
  ## @param nimbus.updateStrategy.rollingUpdate Nimbus deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param nimbus.extraPodSpec Optionally specify extra PodSpec for the Nimbus pod(s)
  ##
  extraPodSpec: {}
  ## Nimbus service parameters
  ##
  service:
    ## @param nimbus.service.type Nimbus service type
    ##
    type: ClusterIP
    ## @param nimbus.service.ports.thrift Nimbus thrift port
    ##
    ports:
      thrift: 6627
    ## Node ports to expose
    ## @param nimbus.service.nodePorts.thrift Node port for thrift
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      thrift: ""
    ## @param nimbus.service.clusterIP Nimbus service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param nimbus.service.loadBalancerIP Nimbus service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param nimbus.service.loadBalancerSourceRanges Nimbus service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param nimbus.service.externalTrafficPolicy Nimbus service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param nimbus.service.annotations Additional custom annotations for Nimbus service
    ##
    annotations: {}
    ## @param nimbus.service.extraPorts Extra ports to expose in the Nimbus service (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param nimbus.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param nimbus.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
    ## Headless service properties
    ##
    headless:
      ## @param nimbus.service.headless.annotations Annotations for the headless service.
      ##
      annotations: {}
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ##
  persistence:
    ## @param nimbus.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: false
    ## @param nimbus.persistence.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param nimbus.persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param nimbus.persistence.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param nimbus.persistence.size Size of data volume
    ##
    size: 10Gi
    ## @param nimbus.persistence.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
    ## @param nimbus.persistence.selector Selector to match an existing Persistent Volume for Nimbus data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param nimbus.persistence.dataSource Custom PVC data source
    ##
    dataSource: {}
  ## Nimbus Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ## @param nimbus.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param nimbus.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param nimbus.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: true
    minAvailable: 1
    maxUnavailable: ""

## @section Supervisor parameters

supervisor:
  ## @param supervisor.replicaCount Number of Supervisor replicas
  ##
  replicaCount: 3
  ## @param supervisor.slotsPerSupervisor Number of worker slots per supervisor
  ##
  slotsPerSupervisor: 4
  ## @param supervisor.configuration Storm configuration for Supervisor
  ## @param supervisor.existingConfigmap Name of existing ConfigMap with Storm configuration for Supervisor
  ## @param supervisor.extraEnvVars Array with extra environment variables to add to Supervisor containers
  ## @param supervisor.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Supervisor containers
  ## @param supervisor.extraEnvVarsSecret Name of existing Secret containing extra env vars for Supervisor containers
  ##
  configuration: ""
  existingConfigmap: ""
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  ## @param supervisor.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param supervisor.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param supervisor.lifecycleHooks for the Supervisor container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param supervisor.extraVolumes Optionally specify extra list of additional volumes for the Supervisor pod(s)
  ##
  extraVolumes: []
  ## @param supervisor.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Supervisor container(s)
  ##
  extraVolumeMounts: []
  ## @param supervisor.deploymentMode Deployment mode for supervisors - can be 'deployment' or 'daemonset'
  ##
  deploymentMode: deployment
  ## @param supervisor.podSecurityContext.enabled Enabled Supervisor pods' Security Context
  ## @param supervisor.podSecurityContext.fsGroup Set Supervisor pod's Security Context fsGroup
  ## @param supervisor.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param supervisor.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param supervisor.podSecurityContext.supplementalGroups Set filesystem extra groups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  ## @param supervisor.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param supervisor.containerSecurityContext.seLinuxOptions Set SELinux options in container
  ## @param supervisor.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param supervisor.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param supervisor.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param supervisor.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param supervisor.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param supervisor.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param supervisor.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## Configure resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param supervisor.resources.limits The resources limits for the Supervisor containers
  ## @param supervisor.resources.requests The requested resources for the Supervisor containers
  ##
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi
  ## Configure Supervisor containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param supervisor.livenessProbe.enabled Enable livenessProbe on Supervisor containers
  ## @param supervisor.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param supervisor.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param supervisor.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param supervisor.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param supervisor.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  ## Liveness probe checks if the supervisor process is running
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  ## @param supervisor.readinessProbe.enabled Enable readinessProbe on Supervisor containers
  ## @param supervisor.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param supervisor.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param supervisor.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param supervisor.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param supervisor.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  ## Readiness probe checks if supervisor can communicate with Nimbus
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 45
    periodSeconds: 15
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  ## @param supervisor.startupProbe.enabled Enable startupProbe on Supervisor containers
  ## @param supervisor.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param supervisor.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param supervisor.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param supervisor.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param supervisor.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param supervisor.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param supervisor.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param supervisor.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param supervisor.hostAliases Add deployment host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param supervisor.podLabels Extra labels for Supervisor pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param supervisor.podAnnotations Annotations for Supervisor pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param supervisor.podAffinityPreset Pod affinity preset. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param supervisor.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node supervisor.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param supervisor.nodeAffinityPreset.type Node affinity preset type. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param supervisor.nodeAffinityPreset.key Node label key to match. Ignored if `supervisor.affinity` is set
    ##
    key: ""
    ## @param supervisor.nodeAffinityPreset.values Node label values to match. Ignored if `supervisor.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param supervisor.affinity Affinity for Supervisor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `supervisor.podAffinityPreset`, `supervisor.podAntiAffinityPreset`, and `supervisor.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param supervisor.nodeSelector Node labels for Supervisor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param supervisor.tolerations Tolerations for Supervisor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param supervisor.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param supervisor.priorityClassName Supervisor pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param supervisor.schedulerName Alternate scheduler for Supervisor pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param supervisor.terminationGracePeriodSeconds In seconds, time given to the Supervisor pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param supervisor.updateStrategy.type Supervisor deployment strategy type
  ## @param supervisor.updateStrategy.rollingUpdate Supervisor deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param supervisor.extraPodSpec Optionally specify extra PodSpec for the Supervisor pod(s)
  ##
  extraPodSpec: {}
  ## @param supervisor.sidecars Add additional sidecar containers to the Supervisor pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param supervisor.initContainers Add additional init containers to the Supervisor pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Supervisor autoscaling configuration
  ## @param supervisor.autoscaling.enabled Enable autoscaling for supervisor
  ## @param supervisor.autoscaling.minReplicas Minimum number of supervisor replicas
  ## @param supervisor.autoscaling.maxReplicas Maximum number of supervisor replicas
  ## @param supervisor.autoscaling.targetCPU Target CPU utilization percentage
  ## @param supervisor.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: 3
    maxReplicas: 10
    targetCPU: 80
    targetMemory: 80
  ## Supervisor service parameters
  ##
  service:
    ## @param supervisor.service.type Supervisor service type
    ##
    type: ClusterIP
    ## @param supervisor.service.ports.http Supervisor HTTP port
    ##
    ports:
      http: 8000
    ## Node ports to expose
    ## @param supervisor.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param supervisor.service.clusterIP Supervisor service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param supervisor.service.loadBalancerIP Supervisor service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param supervisor.service.loadBalancerSourceRanges Supervisor service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param supervisor.service.externalTrafficPolicy Supervisor service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param supervisor.service.annotations Additional custom annotations for Supervisor service
    ##
    annotations: {}
    ## @param supervisor.service.extraPorts Extra ports to expose in the Supervisor service (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param supervisor.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param supervisor.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Storm UI parameters

ui:
  ## @param ui.enabled Enable Storm UI
  ##
  enabled: true
  ## @param ui.replicaCount Number of Storm UI replicas
  ##
  replicaCount: 1
  ## @param ui.configuration Storm configuration for UI
  ## @param ui.existingConfigmap Name of existing ConfigMap with Storm configuration for UI
  ## @param ui.extraEnvVars Array with extra environment variables to add to UI containers
  ## @param ui.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for UI containers
  ## @param ui.extraEnvVarsSecret Name of existing Secret containing extra env vars for UI containers
  ##
  configuration: ""
  existingConfigmap: ""
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  ## @param ui.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param ui.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param ui.lifecycleHooks for the UI container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param ui.extraVolumes Optionally specify extra list of additional volumes for the UI pod(s)
  ##
  extraVolumes: []
  ## @param ui.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the UI container(s)
  ##
  extraVolumeMounts: []
  ## @param ui.podSecurityContext.enabled Enabled UI pods' Security Context
  ## @param ui.podSecurityContext.fsGroup Set UI pod's Security Context fsGroup
  ## @param ui.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param ui.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param ui.podSecurityContext.supplementalGroups Set filesystem extra groups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  ## @param ui.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param ui.containerSecurityContext.seLinuxOptions Set SELinux options in container
  ## @param ui.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param ui.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param ui.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param ui.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param ui.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param ui.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param ui.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## Configure resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param ui.resources.limits The resources limits for the UI containers
  ## @param ui.resources.requests The requested resources for the UI containers
  ##
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  ## Configure UI containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param ui.livenessProbe.enabled Enable livenessProbe on UI containers
  ## @param ui.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param ui.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param ui.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param ui.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param ui.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ui.readinessProbe.enabled Enable readinessProbe on UI containers
  ## @param ui.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param ui.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param ui.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param ui.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param ui.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ui.startupProbe.enabled Enable startupProbe on UI containers
  ## @param ui.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param ui.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param ui.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param ui.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param ui.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ui.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param ui.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param ui.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param ui.hostAliases Add deployment host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param ui.podLabels Extra labels for UI pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param ui.podAnnotations Annotations for UI pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param ui.podAffinityPreset Pod affinity preset. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param ui.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node ui.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param ui.nodeAffinityPreset.type Node affinity preset type. Ignored if `ui.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param ui.nodeAffinityPreset.key Node label key to match. Ignored if `ui.affinity` is set
    ##
    key: ""
    ## @param ui.nodeAffinityPreset.values Node label values to match. Ignored if `ui.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param ui.affinity Affinity for UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `ui.podAffinityPreset`, `ui.podAntiAffinityPreset`, and `ui.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param ui.nodeSelector Node labels for UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param ui.tolerations Tolerations for UI pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param ui.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param ui.priorityClassName UI pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param ui.schedulerName Alternate scheduler for UI pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param ui.terminationGracePeriodSeconds In seconds, time given to the UI pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param ui.updateStrategy.type UI deployment strategy type
  ## @param ui.updateStrategy.rollingUpdate UI deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param ui.extraPodSpec Optionally specify extra PodSpec for the UI pod(s)
  ##
  extraPodSpec: {}
  ## @param ui.sidecars Add additional sidecar containers to the UI pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param ui.initContainers Add additional init containers to the UI pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## UI service parameters
  ##
  service:
    ## @param ui.service.type UI service type
    ##
    type: ClusterIP
    ## @param ui.service.ports.http UI HTTP port
    ##
    ports:
      http: 8080
    ## Node ports to expose
    ## @param ui.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param ui.service.clusterIP UI service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param ui.service.loadBalancerIP UI service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param ui.service.loadBalancerSourceRanges UI service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param ui.service.externalTrafficPolicy UI service external traffic policy
    ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param ui.service.annotations Additional custom annotations for UI service
    ##
    annotations: {}
    ## @param ui.service.extraPorts Extra ports to expose in the UI service (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param ui.service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
    ## @param ui.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## UI ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ##
  ingress:
    ## @param ui.ingress.enabled Enable ingress record generation for Storm UI
    ##
    enabled: false
    ## @param ui.ingress.pathType Ingress path type
    ##
    pathType: ImplementationSpecific
    ## @param ui.ingress.apiVersion Force Ingress API version (automatically detected if not set)
    ##
    apiVersion: ""
    ## @param ui.ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    ##
    ingressClassName: "nginx"
    ## @param ui.ingress.hostname Default host for the ingress record
    ##
    hostname: storm.local
    ## @param ui.ingress.path Default path for the ingress record
    ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
    ##
    path: /
    ## @param ui.ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
    ## Use this parameter to set the required annotations for cert-manager, see
    ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
    ## e.g:
    ## annotations:
    ##   kubernetes.io/ingress.class: nginx
    ##   cert-manager.io/cluster-issuer: cluster-issuer-name
    ##
    annotations: {}
    ## @param ui.ingress.tls Enable TLS configuration for the host defined at `ui.ingress.hostname` parameter
    ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ui.ingress.hostname }}`
    ## You can:
    ##   - Use the `ui.ingress.secrets` parameter to create this TLS secret
    ##   - Rely on cert-manager to create it by setting the corresponding annotations
    ##   - Rely on Helm to create self-signed certificates by setting `ui.ingress.selfSigned=true`
    ##
    tls: false
    ## @param ui.ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
    ##
    selfSigned: false
    ## @param ui.ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
    ## e.g:
    ## extraHosts:
    ##   - name: storm.local
    ##     path: /
    ##
    extraHosts: []
    ## @param ui.ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
    ## e.g:
    ## extraPaths:
    ## - path: /*
    ##   backend:
    ##     serviceName: ssl-redirect
    ##     servicePort: use-annotation
    ##
    extraPaths: []
    ## @param ui.ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## extraTls:
    ## - hosts:
    ##     - storm.local
    ##   secretName: storm.local-tls
    ##
    extraTls: []
    ## @param ui.ingress.secrets Custom TLS certificates as secrets
    ## NOTE: 'key' and 'certificate' are expected in PEM format
    ## NOTE: 'name' should line up with a 'secretName' set further up
    ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
    ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ## e.g:
    ## secrets:
    ##   - name: storm.local-tls
    ##     key: |-
    ##       -----BEGIN RSA PRIVATE KEY-----
    ##       ...
    ##       -----END RSA PRIVATE KEY-----
    ##     certificate: |-
    ##       -----BEGIN CERTIFICATE-----
    ##       ...
    ##       -----END CERTIFICATE-----
    ##
    secrets: []
    ## @param ui.ingress.extraRules Additional rules to be covered with this ingress record
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
    ## e.g:
    ## extraRules:
    ## - host: storm.local
    ##   http:
    ##     path: /
    ##     backend:
    ##       service:
    ##         name: storm-svc
    ##         port:
    ##           name: http
    ##
    extraRules: []
  ## UI authentication parameters
  ##
  auth:
    ## @param ui.auth.enabled Enable authentication for Storm UI
    ##
    enabled: false
    ## @param ui.auth.type Authentication type. Options: `simple`, `oauth`
    ##
    type: simple
    ## @param ui.auth.existingSecret Existing secret with UI authentication credentials
    ## NOTE: Must contain the keys defined at `ui.auth.secretKeys`
    ##
    existingSecret: ""
    ## @param ui.auth.secretKeys.usersKey Key inside existing secret containing users definition
    ##
    secretKeys:
      usersKey: users
    ## @param ui.auth.users Array of users for simple authentication
    ## e.g:
    ## users:
    ##   - username: admin
    ##     password: changeme
    ##   - username: viewer
    ##     password: readonly
    ##
    users: []

## @section Storm Cluster parameters

stormCluster:
  ## @param stormCluster.enabled Enable StormCluster resource creation
  ##
  enabled: false
  ## @param stormCluster.name Name of the StormCluster resource
  ##
  name: storm-cluster
  ## @param stormCluster.config Storm configuration overrides for the cluster
  ##
  config:
    "worker.heap.memory.mb": "1024"
    "nimbus.childopts": "-Xmx1024m"
    "supervisor.childopts": "-Xmx1024m"

## @section Storm Controller parameters

controller:
  ## @param controller.enabled Enable Storm Controller
  ##
  enabled: false
  ## @param controller.replicaCount Number of Storm Controller replicas
  ##
  replicaCount: 1
  ## Controller image
  ## @param controller.image.registry [default: REGISTRY_NAME] Controller image registry
  ## @param controller.image.repository [default: REPOSITORY_NAME/storm-controller] Controller image repository
  ## @param controller.image.tag Controller image tag (immutable tags are recommended)
  ## @param controller.image.digest Controller image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param controller.image.pullPolicy Controller image pull policy
  ## @param controller.image.pullSecrets Specify docker-registry secret names as an array
  ##
  image:
    registry: docker.io
    repository: apache/storm-controller
    tag: 0.1.0
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
  ## @param controller.configuration Controller configuration
  ## @param controller.existingConfigmap Name of existing ConfigMap with Controller configuration
  ## @param controller.extraEnvVars Array with extra environment variables to add to Controller containers
  ## @param controller.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Controller containers
  ## @param controller.extraEnvVarsSecret Name of existing Secret containing extra env vars for Controller containers
  ##
  configuration: ""
  existingConfigmap: ""
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  ## @param controller.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param controller.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param controller.lifecycleHooks for the Controller container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param controller.extraVolumes Optionally specify extra list of additional volumes for the Controller pod(s)
  ##
  extraVolumes: []
  ## @param controller.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Controller container(s)
  ##
  extraVolumeMounts: []
  ## @param controller.podSecurityContext.enabled Enabled Controller pods' Security Context
  ## @param controller.podSecurityContext.fsGroup Set Controller pod's Security Context fsGroup
  ## @param controller.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param controller.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param controller.podSecurityContext.supplementalGroups Set filesystem extra groups
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1000
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
  ## @param controller.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param controller.containerSecurityContext.seLinuxOptions Set SELinux options in container
  ## @param controller.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param controller.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param controller.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param controller.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param controller.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param controller.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param controller.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1000
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## Configure resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param controller.resources.limits The resources limits for the Controller containers
  ## @param controller.resources.requests The requested resources for the Controller containers
  ##
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  ## Configure Controller containers' liveness, readiness and startup probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param controller.livenessProbe.enabled Enable livenessProbe on Controller containers
  ## @param controller.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param controller.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param controller.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param controller.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param controller.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param controller.readinessProbe.enabled Enable readinessProbe on Controller containers
  ## @param controller.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param controller.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param controller.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param controller.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param controller.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param controller.startupProbe.enabled Enable startupProbe on Controller containers
  ## @param controller.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param controller.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param controller.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param controller.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param controller.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param controller.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param controller.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param controller.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## @param controller.hostAliases Add deployment host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param controller.podLabels Extra labels for Controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param controller.podAnnotations Annotations for Controller pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param controller.podAffinityPreset Pod affinity preset. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param controller.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node controller.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param controller.nodeAffinityPreset.type Node affinity preset type. Ignored if `controller.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param controller.nodeAffinityPreset.key Node label key to match. Ignored if `controller.affinity` is set
    ##
    key: ""
    ## @param controller.nodeAffinityPreset.values Node label values to match. Ignored if `controller.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param controller.affinity Affinity for Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `controller.podAffinityPreset`, `controller.podAntiAffinityPreset`, and `controller.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param controller.nodeSelector Node labels for Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param controller.tolerations Tolerations for Controller pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param controller.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param controller.priorityClassName Controller pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param controller.schedulerName Alternate scheduler for Controller pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param controller.terminationGracePeriodSeconds In seconds, time given to the Controller pod to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param controller.updateStrategy.type Controller deployment strategy type
  ## @param controller.updateStrategy.rollingUpdate Controller deployment rolling update configuration parameters
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ##
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: {}
  ## @param controller.extraPodSpec Optionally specify extra PodSpec for the Controller pod(s)
  ##
  extraPodSpec: {}
  ## @param controller.sidecars Add additional sidecar containers to the Controller pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param controller.initContainers Add additional init containers to the Controller pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
  ## Controller configuration
  ##
  config:
    ## @param controller.config.reconcileInterval Reconciliation interval for the controller
    ##
    reconcileInterval: 30s
    ## @param controller.config.workerLaunchTimeout Timeout for worker launch operations
    ##
    workerLaunchTimeout: 300s
    ## @param controller.config.topologySubmitTimeout Timeout for topology submission
    ##
    topologySubmitTimeout: 120s

## @section Zookeeper parameters

## Zookeeper chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/zookeeper/values.yaml
##
zookeeper:
  ## @param zookeeper.enabled Enable Zookeeper deployment. Necessary for Storm
  ##
  enabled: true
  ## @param zookeeper.replicaCount Number of Zookeeper replicas
  ##
  replicaCount: 3
  ## Zookeeper authentication
  ##
  auth:
    ## @param zookeeper.auth.enabled Enable Zookeeper authentication
    ##
    enabled: false
  ## Zookeeper persistence
  ##
  persistence:
    ## @param zookeeper.persistence.enabled Enable persistence on Zookeeper using PVC(s)
    ##
    enabled: true
    ## @param zookeeper.persistence.storageClass Persistent Volume storage class
    ##
    storageClass: ""
    ## @param zookeeper.persistence.size Persistent Volume size
    ##
    size: 8Gi
  ## Configure resource requests and limits
  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ##
  resources:
    ## @param zookeeper.resources.requests The requested resources for the Zookeeper containers
    ##
    requests:
      cpu: 250m
      memory: 256Mi
    ## @param zookeeper.resources.limits The resources limits for the Zookeeper containers
    ##
    limits:
      cpu: 500m
      memory: 512Mi

## @section External Zookeeper parameters

## External Zookeeper configuration
## All of these values are only used when zookeeper.enabled is set to false
##
externalZookeeper:
  ## @param externalZookeeper.servers List of external Zookeeper servers to use
  ##
  servers: []

## @section Monitoring parameters

## Prometheus metrics
##
metrics:
  ## @param metrics.enabled Enable the export of Prometheus metrics
  ##
  enabled: true
  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
    ##
    enabled: true
    ## @param metrics.serviceMonitor.namespace Namespace in which Prometheus is running
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    interval: 30s
    ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    scrapeTimeout: 10s
    ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
    ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
    ##
    selector: {}
    ## @param metrics.serviceMonitor.labels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
    ##
    labels: {}
    ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
    ##
    relabelings: []
    ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
  ## Prometheus Operator PrometheusRule configuration
  ##
  prometheusRule:
    ## @param metrics.prometheusRule.enabled Create a PrometheusRule for Prometheus Operator
    ##
    enabled: false
    ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
    ##
    namespace: ""
    ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
    ##
    additionalLabels: {}
    ## @param metrics.prometheusRule.rules PrometheusRule definitions
    ##
    rules: []

## @section Storm configuration parameters

## @param stormConf Storm configuration (storm.yaml)
## ref: https://storm.apache.org/documentation/Configuration.html
##
stormConf:
  storm.zookeeper.session.timeout: 20000
  storm.zookeeper.connection.timeout: 15000
  nimbus.task.timeout.secs: 30
  nimbus.supervisor.timeout.secs: 60
  supervisor.worker.timeout.secs: 30
  topology.message.timeout.secs: 30

## @section RBAC parameters

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount for Storm pods
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: true
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
  ##
  annotations: {}

## Role Based Access Control configuration
##
rbac:
  ## @param rbac.create Whether to create RBAC resources
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []